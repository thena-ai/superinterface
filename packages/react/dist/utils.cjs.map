{"version":3,"sources":["/Users/ankit/superinterface/packages/react/dist/utils.cjs","../src/utils.ts","../src/lib/optimistic/optimisticId.ts","../src/lib/optimistic/isOptimistic.ts","../src/lib/runSteps/serializeRunStep.ts","../src/lib/messages/serializeMessage.ts","../src/lib/threadIdStorage/key.ts","../src/lib/streams/enqueueJson.ts"],"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key2","call","__toESM","mod","isNodeMode","__esModule","value","__toCommonJS","utils_exports","enqueueJson","isOptimistic","optimisticId","serializeMessage","threadIdStorageKey","key","module","exports","import_radash","require","concat","uid","import_lodash","_ref","id","_","startsWith","serializeRunStep","runStep","import_radash2","pick","_message$runSteps","message","role","created_at","content","run_id","assistant_id","thread_id","attachments","metadata","runSteps","map","status","assistantId","controller","enqueue","TextEncoder","encode","JSON","stringify"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key2 of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key2) && key2 !== except)\n        __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  enqueueJson: () => enqueueJson,\n  isOptimistic: () => isOptimistic,\n  optimisticId: () => optimisticId,\n  serializeMessage: () => serializeMessage,\n  threadIdStorageKey: () => key\n});\nmodule.exports = __toCommonJS(utils_exports);\n\n// src/lib/optimistic/optimisticId.ts\nvar import_radash = require(\"radash\");\nvar optimisticId = () => \"-\".concat((0, import_radash.uid)(24));\n\n// src/lib/optimistic/isOptimistic.ts\nvar import_lodash = __toESM(require(\"lodash\"), 1);\nvar isOptimistic = (_ref) => {\n  var {\n    id\n  } = _ref;\n  return import_lodash.default.startsWith(id, \"-\");\n};\n\n// src/lib/runSteps/serializeRunStep.ts\nvar import_radash2 = require(\"radash\");\nvar serializeRunStep = (_ref) => {\n  var {\n    runStep\n  } = _ref;\n  return (0, import_radash2.pick)(runStep, [\"id\", \"run_id\", \"step_details\", \"completed_at\", \"cancelled_at\", \"failed_at\", \"status\"]);\n};\n\n// src/lib/messages/serializeMessage.ts\nvar serializeMessage = (_ref) => {\n  var _message$runSteps;\n  var {\n    message\n  } = _ref;\n  return {\n    id: message.id,\n    role: message.role,\n    created_at: message.created_at,\n    content: message.content,\n    run_id: message.run_id,\n    assistant_id: message.assistant_id,\n    thread_id: message.thread_id,\n    attachments: message.attachments,\n    metadata: message.metadata,\n    runSteps: ((_message$runSteps = message.runSteps) !== null && _message$runSteps !== void 0 ? _message$runSteps : []).map((runStep) => serializeRunStep({\n      runStep\n    })),\n    status: message.status\n  };\n};\n\n// src/lib/threadIdStorage/key.ts\nvar key = (_ref) => {\n  var {\n    assistantId\n  } = _ref;\n  return \"superinterface-\".concat(assistantId, \"-threadId\");\n};\n\n// src/lib/streams/enqueueJson.ts\nvar enqueueJson = (_ref) => {\n  var {\n    controller,\n    value\n  } = _ref;\n  return controller.enqueue(new TextEncoder().encode(JSON.stringify(value)));\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  enqueueJson,\n  isOptimistic,\n  optimisticId,\n  serializeMessage,\n  threadIdStorageKey\n});\n","export { optimisticId } from '@/lib/optimistic/optimisticId';\nexport { isOptimistic } from '@/lib/optimistic/isOptimistic';\nexport { serializeMessage } from '@/lib/messages/serializeMessage';\nexport { key as threadIdStorageKey } from '@/lib/threadIdStorage/key';\nexport { enqueueJson } from '@/lib/streams/enqueueJson';","import { uid } from 'radash';\nexport var optimisticId = () => \"-\".concat(uid(24));","import _ from 'lodash';\nexport var isOptimistic = _ref => {\n  var {\n    id\n  } = _ref;\n  return _.startsWith(id, '-');\n};","import { pick } from 'radash';\nexport var serializeRunStep = _ref => {\n  var {\n    runStep\n  } = _ref;\n  return pick(runStep, ['id', 'run_id', 'step_details', 'completed_at', 'cancelled_at', 'failed_at', 'status']);\n};","import { serializeRunStep } from '@/lib/runSteps/serializeRunStep';\nexport var serializeMessage = _ref => {\n  var _message$runSteps;\n  var {\n    message\n  } = _ref;\n  return {\n    id: message.id,\n    role: message.role,\n    created_at: message.created_at,\n    content: message.content,\n    run_id: message.run_id,\n    assistant_id: message.assistant_id,\n    thread_id: message.thread_id,\n    attachments: message.attachments,\n    metadata: message.metadata,\n    runSteps: ((_message$runSteps = message.runSteps) !== null && _message$runSteps !== void 0 ? _message$runSteps : []).map(runStep => serializeRunStep({\n      runStep\n    })),\n    status: message.status\n  };\n};","export var key = _ref => {\n  var {\n    assistantId\n  } = _ref;\n  return \"superinterface-\".concat(assistantId, \"-threadId\");\n};","export var enqueueJson = _ref => {\n  var {\n    controller,\n    value\n  } = _ref;\n  return controller.enqueue(new TextEncoder().encode(JSON.stringify(value)));\n};"]}